########################
##   ProtoMS 3.3      ##
########################

--------------------------------
 Prototype Molecular Simulation

Version 3.3

(C) Christopher Woods, Julien Michel, Michael Bodnarchuk, Samuel Genheden, Richard Bradshaw, Gregory Ross, Chris Cave-Ayland, Ana I. Cabedo Martinez, Hannah Bruce-Macdonald, James Graham, Marley Samways 2002-2018
      
  Released under the GNU GPL
        (see LICENSE)

--------------------------------

To compile ProtoMS create a new directory 'build' and from this directory type 'cmake ..'.
This will perform checks and prepare to compile.  Then type 'make install'.

Requirements:
* Fortan compiler                     : GNU (https://gcc.gnu.org/) or Intel recommended
* Python (https://www.python.org/)    : Required to compile and run ProtoMS
* CMake (http://www.cmake.org/)       : Required to compile ProtoMS

Optional:
* MPI                                 : Recommended OpenMPI (http://www.open-mpi.org/) or MPICH (https://www.mpich.org/) - some functions will be unavailable without MPI

Set the environmental variable $PROTOMSHOME to the installation directory of ProtoMS.

The ProtoMS tools have the following requirements:
* Python, version 2.7
* NumPy (http://www.numpy.org/)
* SciPy (http://www.scipy.org/)
* Matplotlib (http://www.matplotlib.org/)

Optional:
* AmberTools (http://www.ambermd.org/)          : Required to parameterise small molecules (and for the test suite)
* pymbar (https://github.com/choderalab/pymbar) : Required to perform MBAR calculations
* Nose (https://nose.readthedocs.org/en/latest/): Required to run the test suite

The environmental variable $AMBERHOME is required to run various components of the tools and test suite.

To learn how to use ProtoMS read the manual that can be found in the doc folder

ProtoMS comes with a test suite. You can find it, together with its own README, in the test directory.

There are some examples of using ProtoMS in the tutorial directory.

Contents of directory:

* CMakeLists.txt    : This file configures ProtoMS prior to compiling.

* data 		    : This directory contains a number of useful files, e.g. pre-equilibrated boxes and some template files

* doc 		    : This directory contains documentation

* README 	    : This file

* parameter 	    : This directory contains all of the standard parameter files that describe the standard forcefields implemented in ProtoMS.

* protoms.py	    : A tool to setup common ProtoMS calculations

* src 		    : This directory contains all of the source code for the main program

* tools 	    : This directory contains numerous useful scripts to setup and analyse ProtoMS simualtions.

* tutorial 	    : This directory contains a number of examples that demonstrate applications of ProtoMS.

* tests             : This directory contains the python scripts and input data required to run the test suite
